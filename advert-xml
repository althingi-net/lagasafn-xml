#!/usr/bin/env python3
import click
from datetime import datetime
from datetime import timedelta
from lagasafn.advert.conversion import convert_adverts
from lagasafn.advert.conversion import create_index
from lagasafn.advert.remote import update_local_adverts
from lagasafn.constants import CURRENT_PARLIAMENT_VERSION
from lagasafn.models import LawManager

def help():
    ctx = click.get_current_context()
    click.echo(ctx.get_help())
    quit(2)


@click.command()
@click.option("--full", is_flag=True, help="Runs --retrieve, --convert and --make-index, in that order.")
@click.option("--retrieve", is_flag=True, help="Retrieves and saves remote advers on the local disk in a cleaned XML format.")
@click.option("--convert", is_flag=True, help="Converts local adverts into their corresponding XML files.")
@click.option("--make-index", is_flag=True, help="Create index of adverts.")
def main(full: bool, retrieve: bool, convert: bool, make_index: bool):

    # Make sure that the parameters make sense.
    if not any([full, retrieve,  convert, make_index]):
        help()

    # Expand the special "--full" option.
    if full:
        retrieve = True
        convert = True
        make_index = True

    # We'll handle adverts that were published after the currently selected
    # codex version was released.
    law_index = LawManager.index(CURRENT_PARLIAMENT_VERSION)
    from_date = law_index.info.date_to + timedelta(days=1)
    to_date = datetime.now()

    if retrieve:
        update_local_adverts(from_date, to_date)
    if convert:
        convert_adverts()
    if make_index:
        create_index()


if __name__ == "__main__":
    main()
